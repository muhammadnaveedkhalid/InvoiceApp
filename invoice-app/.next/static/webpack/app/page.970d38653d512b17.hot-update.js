"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/lib/quickbooks/api.ts":
/*!***********************************!*\
  !*** ./src/lib/quickbooks/api.ts ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchInvoices: function() { return /* binding */ fetchInvoices; },\n/* harmony export */   getAuthUrl: function() { return /* binding */ getAuthUrl; },\n/* harmony export */   getInvoiceById: function() { return /* binding */ getInvoiceById; },\n/* harmony export */   handleCallback: function() { return /* binding */ handleCallback; },\n/* harmony export */   initializeQBO: function() { return /* binding */ initializeQBO; }\n/* harmony export */ });\n/* harmony import */ var _mock_invoices__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../mock/invoices */ \"(app-pages-browser)/./src/lib/mock/invoices.ts\");\n\n// Uncomment and use these imports when you have QuickBooks API credentials\n// import OAuthClient from 'intuit-oauth'\n// import QuickBooks from 'node-quickbooks'\n// const oauthClient = new OAuthClient({\n//   clientId: process.env.QUICKBOOKS_CLIENT_ID!,\n//   clientSecret: process.env.QUICKBOOKS_CLIENT_SECRET!,\n//   environment: 'sandbox',\n//   redirectUri: `${process.env.NEXT_PUBLIC_BASE_URL}/api/auth/callback`,\n// })\n// let qbo: QuickBooks | null = null\nconst initializeQBO = (accessToken, realmId)=>{\n    // Uncomment when you have QuickBooks API credentials\n    // qbo = new QuickBooks(\n    //   process.env.QUICKBOOKS_CLIENT_ID!,\n    //   process.env.QUICKBOOKS_CLIENT_SECRET!,\n    //   accessToken,\n    //   false,\n    //   realmId\n    // )\n    console.log(\"Using mock data instead of QuickBooks API\");\n};\nconst fetchInvoices = async ()=>{\n    return _mock_invoices__WEBPACK_IMPORTED_MODULE_0__.mockInvoices;\n};\nconst getInvoiceById = async (id)=>{\n    // Remove any 'INV-' prefix and whitespace\n    const cleanId = id.replace(/^inv-|^INV-|\\s+/g, \"\");\n    // Try to find the invoice by ID or DocNumber\n    const invoice = _mock_invoices__WEBPACK_IMPORTED_MODULE_0__.mockInvoices.find((inv)=>inv.Id === cleanId || inv.DocNumber === cleanId || inv.DocNumber === \"INV-\".concat(cleanId) || inv.DocNumber === \"inv-\".concat(cleanId));\n    if (!invoice) {\n        throw new Error(\"Invoice not found\");\n    }\n    return invoice;\n};\nconst getAuthUrl = ()=>{\n    // Uncomment when you have QuickBooks API credentials\n    // return oauthClient.authorizeUri({\n    //   scope: [\n    //     OAuthClient.scopes.Accounting,\n    //     OAuthClient.scopes.OpenId,\n    //     OAuthClient.scopes.Profile,\n    //     OAuthClient.scopes.Email,\n    //   ],\n    //   state: 'teststate',\n    // })\n    // Mock auth URL\n    return \"http://localhost:3000/api/auth/callback?mock=true\";\n};\nasync function handleCallback(url) {\n    // Uncomment when you have QuickBooks API credentials\n    // const oauthClient = new OAuthClient({\n    //   clientId: process.env.QUICKBOOKS_CLIENT_ID!,\n    //   clientSecret: process.env.QUICKBOOKS_CLIENT_SECRET!,\n    //   environment: process.env.NODE_ENV === 'production' ? 'production' : 'sandbox',\n    //   redirectUri: process.env.QUICKBOOKS_REDIRECT_URI!,\n    // });\n    // const authResponse = await oauthClient.createToken(url);\n    // return authResponse.getJson();\n    // Mock auth response\n    return {\n        access_token: \"mock_token\",\n        refresh_token: \"mock_refresh_token\",\n        expires_in: 3600\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9saWIvcXVpY2tib29rcy9hcGkudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQytDO0FBRS9DLDJFQUEyRTtBQUMzRSx5Q0FBeUM7QUFDekMsMkNBQTJDO0FBRTNDLHdDQUF3QztBQUN4QyxpREFBaUQ7QUFDakQseURBQXlEO0FBQ3pELDRCQUE0QjtBQUM1QiwwRUFBMEU7QUFDMUUsS0FBSztBQUVMLG9DQUFvQztBQUU3QixNQUFNQyxnQkFBZ0IsQ0FBQ0MsYUFBcUJDO0lBQ2pELHFEQUFxRDtJQUNyRCx3QkFBd0I7SUFDeEIsdUNBQXVDO0lBQ3ZDLDJDQUEyQztJQUMzQyxpQkFBaUI7SUFDakIsV0FBVztJQUNYLFlBQVk7SUFDWixJQUFJO0lBQ0pDLFFBQVFDLEdBQUcsQ0FBQztBQUNkLEVBQUM7QUFFTSxNQUFNQyxnQkFBZ0I7SUFDM0IsT0FBT04sd0RBQVlBO0FBQ3JCLEVBQUM7QUFFTSxNQUFNTyxpQkFBaUIsT0FBT0M7SUFDbkMsMENBQTBDO0lBQzFDLE1BQU1DLFVBQVVELEdBQUdFLE9BQU8sQ0FBQyxvQkFBb0I7SUFFL0MsNkNBQTZDO0lBQzdDLE1BQU1DLFVBQVVYLHdEQUFZQSxDQUFDWSxJQUFJLENBQUNDLENBQUFBLE1BQ2hDQSxJQUFJQyxFQUFFLEtBQUtMLFdBQ1hJLElBQUlFLFNBQVMsS0FBS04sV0FDbEJJLElBQUlFLFNBQVMsS0FBSyxPQUFlLE9BQVJOLFlBQ3pCSSxJQUFJRSxTQUFTLEtBQUssT0FBZSxPQUFSTjtJQUczQixJQUFJLENBQUNFLFNBQVM7UUFDWixNQUFNLElBQUlLLE1BQU07SUFDbEI7SUFDQSxPQUFPTDtBQUNULEVBQUM7QUFFTSxNQUFNTSxhQUFhO0lBQ3hCLHFEQUFxRDtJQUNyRCxvQ0FBb0M7SUFDcEMsYUFBYTtJQUNiLHFDQUFxQztJQUNyQyxpQ0FBaUM7SUFDakMsa0NBQWtDO0lBQ2xDLGdDQUFnQztJQUNoQyxPQUFPO0lBQ1Asd0JBQXdCO0lBQ3hCLEtBQUs7SUFFTCxnQkFBZ0I7SUFDaEIsT0FBTztBQUNULEVBQUM7QUFFTSxlQUFlQyxlQUFlQyxHQUFXO0lBQzlDLHFEQUFxRDtJQUNyRCx3Q0FBd0M7SUFDeEMsaURBQWlEO0lBQ2pELHlEQUF5RDtJQUN6RCxtRkFBbUY7SUFDbkYsdURBQXVEO0lBQ3ZELE1BQU07SUFDTiwyREFBMkQ7SUFDM0QsaUNBQWlDO0lBRWpDLHFCQUFxQjtJQUNyQixPQUFPO1FBQ0xDLGNBQWM7UUFDZEMsZUFBZTtRQUNmQyxZQUFZO0lBQ2Q7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvbGliL3F1aWNrYm9va3MvYXBpLnRzPzJjYTgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW52b2ljZSB9IGZyb20gJ0AvdHlwZXMvaW52b2ljZSdcclxuaW1wb3J0IHsgbW9ja0ludm9pY2VzIH0gZnJvbSAnLi4vbW9jay9pbnZvaWNlcydcclxuXHJcbi8vIFVuY29tbWVudCBhbmQgdXNlIHRoZXNlIGltcG9ydHMgd2hlbiB5b3UgaGF2ZSBRdWlja0Jvb2tzIEFQSSBjcmVkZW50aWFsc1xyXG4vLyBpbXBvcnQgT0F1dGhDbGllbnQgZnJvbSAnaW50dWl0LW9hdXRoJ1xyXG4vLyBpbXBvcnQgUXVpY2tCb29rcyBmcm9tICdub2RlLXF1aWNrYm9va3MnXHJcblxyXG4vLyBjb25zdCBvYXV0aENsaWVudCA9IG5ldyBPQXV0aENsaWVudCh7XHJcbi8vICAgY2xpZW50SWQ6IHByb2Nlc3MuZW52LlFVSUNLQk9PS1NfQ0xJRU5UX0lEISxcclxuLy8gICBjbGllbnRTZWNyZXQ6IHByb2Nlc3MuZW52LlFVSUNLQk9PS1NfQ0xJRU5UX1NFQ1JFVCEsXHJcbi8vICAgZW52aXJvbm1lbnQ6ICdzYW5kYm94JyxcclxuLy8gICByZWRpcmVjdFVyaTogYCR7cHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfQkFTRV9VUkx9L2FwaS9hdXRoL2NhbGxiYWNrYCxcclxuLy8gfSlcclxuXHJcbi8vIGxldCBxYm86IFF1aWNrQm9va3MgfCBudWxsID0gbnVsbFxyXG5cclxuZXhwb3J0IGNvbnN0IGluaXRpYWxpemVRQk8gPSAoYWNjZXNzVG9rZW46IHN0cmluZywgcmVhbG1JZDogc3RyaW5nKSA9PiB7XHJcbiAgLy8gVW5jb21tZW50IHdoZW4geW91IGhhdmUgUXVpY2tCb29rcyBBUEkgY3JlZGVudGlhbHNcclxuICAvLyBxYm8gPSBuZXcgUXVpY2tCb29rcyhcclxuICAvLyAgIHByb2Nlc3MuZW52LlFVSUNLQk9PS1NfQ0xJRU5UX0lEISxcclxuICAvLyAgIHByb2Nlc3MuZW52LlFVSUNLQk9PS1NfQ0xJRU5UX1NFQ1JFVCEsXHJcbiAgLy8gICBhY2Nlc3NUb2tlbixcclxuICAvLyAgIGZhbHNlLFxyXG4gIC8vICAgcmVhbG1JZFxyXG4gIC8vIClcclxuICBjb25zb2xlLmxvZygnVXNpbmcgbW9jayBkYXRhIGluc3RlYWQgb2YgUXVpY2tCb29rcyBBUEknKVxyXG59XHJcblxyXG5leHBvcnQgY29uc3QgZmV0Y2hJbnZvaWNlcyA9IGFzeW5jICgpOiBQcm9taXNlPEludm9pY2VbXT4gPT4ge1xyXG4gIHJldHVybiBtb2NrSW52b2ljZXNcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IGdldEludm9pY2VCeUlkID0gYXN5bmMgKGlkOiBzdHJpbmcpID0+IHtcclxuICAvLyBSZW1vdmUgYW55ICdJTlYtJyBwcmVmaXggYW5kIHdoaXRlc3BhY2VcclxuICBjb25zdCBjbGVhbklkID0gaWQucmVwbGFjZSgvXmludi18XklOVi18XFxzKy9nLCAnJylcclxuICBcclxuICAvLyBUcnkgdG8gZmluZCB0aGUgaW52b2ljZSBieSBJRCBvciBEb2NOdW1iZXJcclxuICBjb25zdCBpbnZvaWNlID0gbW9ja0ludm9pY2VzLmZpbmQoaW52ID0+IFxyXG4gICAgaW52LklkID09PSBjbGVhbklkIHx8IFxyXG4gICAgaW52LkRvY051bWJlciA9PT0gY2xlYW5JZCB8fFxyXG4gICAgaW52LkRvY051bWJlciA9PT0gYElOVi0ke2NsZWFuSWR9YCB8fFxyXG4gICAgaW52LkRvY051bWJlciA9PT0gYGludi0ke2NsZWFuSWR9YFxyXG4gIClcclxuICBcclxuICBpZiAoIWludm9pY2UpIHtcclxuICAgIHRocm93IG5ldyBFcnJvcignSW52b2ljZSBub3QgZm91bmQnKVxyXG4gIH1cclxuICByZXR1cm4gaW52b2ljZVxyXG59XHJcblxyXG5leHBvcnQgY29uc3QgZ2V0QXV0aFVybCA9ICgpID0+IHtcclxuICAvLyBVbmNvbW1lbnQgd2hlbiB5b3UgaGF2ZSBRdWlja0Jvb2tzIEFQSSBjcmVkZW50aWFsc1xyXG4gIC8vIHJldHVybiBvYXV0aENsaWVudC5hdXRob3JpemVVcmkoe1xyXG4gIC8vICAgc2NvcGU6IFtcclxuICAvLyAgICAgT0F1dGhDbGllbnQuc2NvcGVzLkFjY291bnRpbmcsXHJcbiAgLy8gICAgIE9BdXRoQ2xpZW50LnNjb3Blcy5PcGVuSWQsXHJcbiAgLy8gICAgIE9BdXRoQ2xpZW50LnNjb3Blcy5Qcm9maWxlLFxyXG4gIC8vICAgICBPQXV0aENsaWVudC5zY29wZXMuRW1haWwsXHJcbiAgLy8gICBdLFxyXG4gIC8vICAgc3RhdGU6ICd0ZXN0c3RhdGUnLFxyXG4gIC8vIH0pXHJcblxyXG4gIC8vIE1vY2sgYXV0aCBVUkxcclxuICByZXR1cm4gJ2h0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9hcGkvYXV0aC9jYWxsYmFjaz9tb2NrPXRydWUnXHJcbn1cclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBoYW5kbGVDYWxsYmFjayh1cmw6IHN0cmluZykge1xyXG4gIC8vIFVuY29tbWVudCB3aGVuIHlvdSBoYXZlIFF1aWNrQm9va3MgQVBJIGNyZWRlbnRpYWxzXHJcbiAgLy8gY29uc3Qgb2F1dGhDbGllbnQgPSBuZXcgT0F1dGhDbGllbnQoe1xyXG4gIC8vICAgY2xpZW50SWQ6IHByb2Nlc3MuZW52LlFVSUNLQk9PS1NfQ0xJRU5UX0lEISxcclxuICAvLyAgIGNsaWVudFNlY3JldDogcHJvY2Vzcy5lbnYuUVVJQ0tCT09LU19DTElFTlRfU0VDUkVUISxcclxuICAvLyAgIGVudmlyb25tZW50OiBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nID8gJ3Byb2R1Y3Rpb24nIDogJ3NhbmRib3gnLFxyXG4gIC8vICAgcmVkaXJlY3RVcmk6IHByb2Nlc3MuZW52LlFVSUNLQk9PS1NfUkVESVJFQ1RfVVJJISxcclxuICAvLyB9KTtcclxuICAvLyBjb25zdCBhdXRoUmVzcG9uc2UgPSBhd2FpdCBvYXV0aENsaWVudC5jcmVhdGVUb2tlbih1cmwpO1xyXG4gIC8vIHJldHVybiBhdXRoUmVzcG9uc2UuZ2V0SnNvbigpO1xyXG5cclxuICAvLyBNb2NrIGF1dGggcmVzcG9uc2VcclxuICByZXR1cm4ge1xyXG4gICAgYWNjZXNzX3Rva2VuOiAnbW9ja190b2tlbicsXHJcbiAgICByZWZyZXNoX3Rva2VuOiAnbW9ja19yZWZyZXNoX3Rva2VuJyxcclxuICAgIGV4cGlyZXNfaW46IDM2MDAsXHJcbiAgfVxyXG59ICJdLCJuYW1lcyI6WyJtb2NrSW52b2ljZXMiLCJpbml0aWFsaXplUUJPIiwiYWNjZXNzVG9rZW4iLCJyZWFsbUlkIiwiY29uc29sZSIsImxvZyIsImZldGNoSW52b2ljZXMiLCJnZXRJbnZvaWNlQnlJZCIsImlkIiwiY2xlYW5JZCIsInJlcGxhY2UiLCJpbnZvaWNlIiwiZmluZCIsImludiIsIklkIiwiRG9jTnVtYmVyIiwiRXJyb3IiLCJnZXRBdXRoVXJsIiwiaGFuZGxlQ2FsbGJhY2siLCJ1cmwiLCJhY2Nlc3NfdG9rZW4iLCJyZWZyZXNoX3Rva2VuIiwiZXhwaXJlc19pbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/quickbooks/api.ts\n"));

/***/ })

});