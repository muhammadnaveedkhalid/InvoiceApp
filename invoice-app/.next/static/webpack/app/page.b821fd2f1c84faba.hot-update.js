"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/lib/ai/tools.ts":
/*!*****************************!*\
  !*** ./src/lib/ai/tools.ts ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   invoiceTools: function() { return /* binding */ invoiceTools; }\n/* harmony export */ });\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! zod */ \"(app-pages-browser)/./node_modules/zod/lib/index.mjs\");\n/* harmony import */ var _quickbooks_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../quickbooks/api */ \"(app-pages-browser)/./src/lib/quickbooks/api.ts\");\n\n\nconst invoiceSchema = zod__WEBPACK_IMPORTED_MODULE_1__.z.object({\n    id: zod__WEBPACK_IMPORTED_MODULE_1__.z.string()\n});\nconst analyzeSchema = zod__WEBPACK_IMPORTED_MODULE_1__.z.object({\n    analysisType: zod__WEBPACK_IMPORTED_MODULE_1__.z.enum([\n        \"trends\",\n        \"customer\",\n        \"amounts\"\n    ]),\n    timeframe: zod__WEBPACK_IMPORTED_MODULE_1__.z.enum([\n        \"week\",\n        \"month\",\n        \"year\"\n    ]).optional()\n});\nconst invoiceTools = {\n    getInvoice: {\n        name: \"getInvoice\",\n        description: \"Get details of a specific invoice by ID\",\n        parameters: {\n            type: \"object\",\n            properties: {\n                id: {\n                    type: \"string\",\n                    description: \"The ID of the invoice to retrieve\"\n                }\n            },\n            required: [\n                \"id\"\n            ]\n        },\n        validate: invoiceSchema.parse.bind(invoiceSchema),\n        handler: async (args)=>{\n            const invoice = await (0,_quickbooks_api__WEBPACK_IMPORTED_MODULE_0__.getInvoiceById)(args.id);\n            return invoice;\n        }\n    },\n    listInvoices: {\n        name: \"listInvoices\",\n        description: \"List all invoices\",\n        parameters: {\n            type: \"object\",\n            properties: {}\n        },\n        validate: (args)=>args,\n        handler: async ()=>{\n            const invoices = await (0,_quickbooks_api__WEBPACK_IMPORTED_MODULE_0__.fetchInvoices)();\n            return invoices;\n        }\n    },\n    summarizeInvoice: {\n        name: \"summarizeInvoice\",\n        description: \"Get a natural language summary of an invoice\",\n        parameters: {\n            type: \"object\",\n            properties: {\n                id: {\n                    type: \"string\",\n                    description: \"The ID of the invoice to summarize\"\n                }\n            },\n            required: [\n                \"id\"\n            ]\n        },\n        validate: invoiceSchema.parse.bind(invoiceSchema),\n        handler: async (args)=>{\n            var _invoice_CustomerMemo;\n            const invoice = await (0,_quickbooks_api__WEBPACK_IMPORTED_MODULE_0__.getInvoiceById)(args.id);\n            return {\n                summary: \"Invoice #\".concat(invoice.DocNumber, \" for \").concat(invoice.CustomerRef.name),\n                details: {\n                    amount: \"$\".concat(invoice.TotalAmt),\n                    date: new Date(invoice.TxnDate).toLocaleDateString(),\n                    dueDate: new Date(invoice.DueDate).toLocaleDateString(),\n                    balance: \"$\".concat(invoice.Balance),\n                    memo: ((_invoice_CustomerMemo = invoice.CustomerMemo) === null || _invoice_CustomerMemo === void 0 ? void 0 : _invoice_CustomerMemo.value) || \"No memo\"\n                }\n            };\n        }\n    },\n    analyzeInvoices: {\n        name: \"analyzeInvoices\",\n        description: \"Perform analysis of invoices\",\n        parameters: {\n            type: \"object\",\n            properties: {\n                analysisType: {\n                    type: \"string\",\n                    enum: [\n                        \"trends\",\n                        \"customer\",\n                        \"amounts\"\n                    ],\n                    description: \"Type of analysis to perform\"\n                },\n                timeframe: {\n                    type: \"string\",\n                    enum: [\n                        \"week\",\n                        \"month\",\n                        \"year\"\n                    ],\n                    description: \"Time period to analyze\"\n                }\n            },\n            required: [\n                \"analysisType\"\n            ]\n        },\n        validate: analyzeSchema.parse.bind(analyzeSchema),\n        handler: async (args)=>{\n            const invoices = await (0,_quickbooks_api__WEBPACK_IMPORTED_MODULE_0__.fetchInvoices)();\n            switch(args.analysisType){\n                case \"trends\":\n                    const byDate = invoices.reduce((acc, inv)=>{\n                        const date = new Date(inv.TxnDate).toLocaleDateString();\n                        acc[date] = (acc[date] || 0) + inv.TotalAmt;\n                        return acc;\n                    }, {});\n                    return {\n                        type: \"trends\",\n                        data: byDate\n                    };\n                case \"customer\":\n                    const byCustomer = invoices.reduce((acc, inv)=>{\n                        const customer = inv.CustomerRef.name;\n                        acc[customer] = (acc[customer] || 0) + inv.TotalAmt;\n                        return acc;\n                    }, {});\n                    return {\n                        type: \"customer\",\n                        data: byCustomer\n                    };\n                case \"amounts\":\n                    const total = invoices.reduce((sum, inv)=>sum + inv.TotalAmt, 0);\n                    const average = total / invoices.length;\n                    return {\n                        type: \"amounts\",\n                        data: {\n                            total,\n                            average,\n                            count: invoices.length\n                        }\n                    };\n            }\n        }\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/ai/tools.ts\n"));

/***/ })

});