"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/lib/mock/invoices.ts":
/*!**********************************!*\
  !*** ./src/lib/mock/invoices.ts ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mockInvoices: function() { return /* binding */ mockInvoices; }\n/* harmony export */ });\nconst mockInvoices = Array.from({\n    length: 100\n}, (_, i)=>{\n    const invoiceNumber = i + 1;\n    const amount = (invoiceNumber * 100).toFixed(2);\n    return {\n        Id: invoiceNumber.toString(),\n        DocNumber: \"INV-\".concat(invoiceNumber),\n        TxnDate: \"2024-04-05\",\n        DueDate: \"2024-05-05\",\n        TotalAmt: parseFloat(amount),\n        Balance: parseFloat(amount),\n        CustomerRef: {\n            name: \"Customer \".concat(invoiceNumber)\n        },\n        Line: [\n            {\n                Id: \"\".concat(invoiceNumber, \"-1\"),\n                LineNum: 1,\n                Description: \"Invoice \".concat(invoiceNumber, \" line item\"),\n                Amount: parseFloat(amount),\n                DetailType: \"SalesItemLineDetail\",\n                SalesItemLineDetail: {\n                    ItemRef: {\n                        value: \"\".concat(invoiceNumber, \"-1\"),\n                        name: \"Item \".concat(invoiceNumber)\n                    },\n                    UnitPrice: parseFloat(amount),\n                    Qty: 1\n                }\n            }\n        ],\n        CustomerMemo: {\n            value: \"Invoice for Customer \".concat(invoiceNumber)\n        }\n    };\n});\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9saWIvbW9jay9pbnZvaWNlcy50cyIsIm1hcHBpbmdzIjoiOzs7O0FBRU8sTUFBTUEsZUFBMEJDLE1BQU1DLElBQUksQ0FBQztJQUFFQyxRQUFRO0FBQUksR0FBRyxDQUFDQyxHQUFHQztJQUNyRSxNQUFNQyxnQkFBZ0JELElBQUk7SUFDMUIsTUFBTUUsU0FBUyxDQUFDRCxnQkFBZ0IsR0FBRSxFQUFHRSxPQUFPLENBQUM7SUFDN0MsT0FBTztRQUNMQyxJQUFJSCxjQUFjSSxRQUFRO1FBQzFCQyxXQUFXLE9BQXFCLE9BQWRMO1FBQ2xCTSxTQUFTO1FBQ1RDLFNBQVM7UUFDVEMsVUFBVUMsV0FBV1I7UUFDckJTLFNBQVNELFdBQVdSO1FBQ3BCVSxhQUFhO1lBQ1hDLE1BQU0sWUFBMEIsT0FBZFo7UUFDcEI7UUFDQWEsTUFBTTtZQUFDO2dCQUNMVixJQUFJLEdBQWlCLE9BQWRILGVBQWM7Z0JBQ3JCYyxTQUFTO2dCQUNUQyxhQUFhLFdBQXlCLE9BQWRmLGVBQWM7Z0JBQ3RDZ0IsUUFBUVAsV0FBV1I7Z0JBQ25CZ0IsWUFBWTtnQkFDWkMscUJBQXFCO29CQUNuQkMsU0FBUzt3QkFDUEMsT0FBTyxHQUFpQixPQUFkcEIsZUFBYzt3QkFDeEJZLE1BQU0sUUFBc0IsT0FBZFo7b0JBQ2hCO29CQUNBcUIsV0FBV1osV0FBV1I7b0JBQ3RCcUIsS0FBSztnQkFDUDtZQUNGO1NBQUU7UUFDRkMsY0FBYztZQUFFSCxPQUFPLHdCQUFzQyxPQUFkcEI7UUFBZ0I7SUFDakU7QUFDRixHQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9saWIvbW9jay9pbnZvaWNlcy50cz83NjY4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEludm9pY2UgfSBmcm9tICdAL3R5cGVzL2ludm9pY2UnXHJcblxyXG5leHBvcnQgY29uc3QgbW9ja0ludm9pY2VzOiBJbnZvaWNlW10gPSBBcnJheS5mcm9tKHsgbGVuZ3RoOiAxMDAgfSwgKF8sIGkpID0+IHtcclxuICBjb25zdCBpbnZvaWNlTnVtYmVyID0gaSArIDFcclxuICBjb25zdCBhbW91bnQgPSAoaW52b2ljZU51bWJlciAqIDEwMCkudG9GaXhlZCgyKVxyXG4gIHJldHVybiB7XHJcbiAgICBJZDogaW52b2ljZU51bWJlci50b1N0cmluZygpLFxyXG4gICAgRG9jTnVtYmVyOiBgSU5WLSR7aW52b2ljZU51bWJlcn1gLFxyXG4gICAgVHhuRGF0ZTogJzIwMjQtMDQtMDUnLFxyXG4gICAgRHVlRGF0ZTogJzIwMjQtMDUtMDUnLFxyXG4gICAgVG90YWxBbXQ6IHBhcnNlRmxvYXQoYW1vdW50KSxcclxuICAgIEJhbGFuY2U6IHBhcnNlRmxvYXQoYW1vdW50KSxcclxuICAgIEN1c3RvbWVyUmVmOiB7XHJcbiAgICAgIG5hbWU6IGBDdXN0b21lciAke2ludm9pY2VOdW1iZXJ9YFxyXG4gICAgfSxcclxuICAgIExpbmU6IFt7XHJcbiAgICAgIElkOiBgJHtpbnZvaWNlTnVtYmVyfS0xYCxcclxuICAgICAgTGluZU51bTogMSxcclxuICAgICAgRGVzY3JpcHRpb246IGBJbnZvaWNlICR7aW52b2ljZU51bWJlcn0gbGluZSBpdGVtYCxcclxuICAgICAgQW1vdW50OiBwYXJzZUZsb2F0KGFtb3VudCksXHJcbiAgICAgIERldGFpbFR5cGU6ICdTYWxlc0l0ZW1MaW5lRGV0YWlsJyxcclxuICAgICAgU2FsZXNJdGVtTGluZURldGFpbDoge1xyXG4gICAgICAgIEl0ZW1SZWY6IHtcclxuICAgICAgICAgIHZhbHVlOiBgJHtpbnZvaWNlTnVtYmVyfS0xYCxcclxuICAgICAgICAgIG5hbWU6IGBJdGVtICR7aW52b2ljZU51bWJlcn1gXHJcbiAgICAgICAgfSxcclxuICAgICAgICBVbml0UHJpY2U6IHBhcnNlRmxvYXQoYW1vdW50KSxcclxuICAgICAgICBRdHk6IDFcclxuICAgICAgfVxyXG4gICAgfV0sXHJcbiAgICBDdXN0b21lck1lbW86IHsgdmFsdWU6IGBJbnZvaWNlIGZvciBDdXN0b21lciAke2ludm9pY2VOdW1iZXJ9YCB9XHJcbiAgfVxyXG59KVxyXG4iXSwibmFtZXMiOlsibW9ja0ludm9pY2VzIiwiQXJyYXkiLCJmcm9tIiwibGVuZ3RoIiwiXyIsImkiLCJpbnZvaWNlTnVtYmVyIiwiYW1vdW50IiwidG9GaXhlZCIsIklkIiwidG9TdHJpbmciLCJEb2NOdW1iZXIiLCJUeG5EYXRlIiwiRHVlRGF0ZSIsIlRvdGFsQW10IiwicGFyc2VGbG9hdCIsIkJhbGFuY2UiLCJDdXN0b21lclJlZiIsIm5hbWUiLCJMaW5lIiwiTGluZU51bSIsIkRlc2NyaXB0aW9uIiwiQW1vdW50IiwiRGV0YWlsVHlwZSIsIlNhbGVzSXRlbUxpbmVEZXRhaWwiLCJJdGVtUmVmIiwidmFsdWUiLCJVbml0UHJpY2UiLCJRdHkiLCJDdXN0b21lck1lbW8iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/mock/invoices.ts\n"));

/***/ })

});